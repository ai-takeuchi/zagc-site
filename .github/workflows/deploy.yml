name: Build and Deploy via FTPS

on:
  workflow_dispatch: {}
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      COCKPIT_URL: https://${{ secrets.COCKPIT_HOST }}
      COCKPIT_TOKEN: ${{ secrets.COCKPIT_TOKEN }}
      COCKPIT_SPACE: ${{ secrets.COCKPIT_SPACE }}
      COCKPIT_ITEMS_PATH: ${{ secrets.COCKPIT_ITEMS_API_PATH }}
      COCKPIT_ASSETS_API_PATH: ${{ secrets.COCKPIT_ASSETS_API_PATH }}
      FTP_HOST: ${{ secrets.FTPS_HOST }}
      FTP_PORT: ${{ secrets.FTPS_PORT }}
      FTP_USER: ${{ secrets.FTPS_USER }}
      FTP_PASSWORD: ${{ secrets.FTPS_PASSWORD }}
      FTP_REMOTE_DIR: ${{ secrets.FTPS_REMOTE_DIR }}
      DEPLOY_URL: ${{ secrets.DEPLOY_URL }}

    steps:
      - uses: actions/checkout@v3

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y lftp imagemagick webp

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run build script
        run: bash scripts/run_build.sh

      # Deploy: Push to the gh-pages branch for public release
      # gh-pages must be configured in GitHub Pages settings
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages

      # Archive: Commit the built site to the build-history branch
      - name: Commit built site to history branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Force-create a dedicated branch for build history
          git checkout -B build-history
          mkdir -p history
          mv public/* history/ 2>/dev/null || true
          git add history/
          # Don't fail if there are no changes
          git commit -m "Build at $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes"
          git push origin build-history --force
